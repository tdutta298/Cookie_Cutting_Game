#INITIAL SETUP
#----------------------------------------------------------------
import cv2
import os
from cvzone import HandTrackingModule, overlayPNG
import numpy as np
import mediapipe as mp

folderPath = 'frames'
mylist = os.listdir(folderPath)
graphic = [cv2.imread(f'{folderPath}/{imPath}') for imPath in mylist]
intro = graphic[0];
kill = graphic[1];
winner = graphic[2];
cam = cv2.VideoCapture(0)
detector = HandTrackingModule.HandDetector(maxHands=1,detectionCon=0.77)

sqr_img = cv2.imread('cookie.png')
mlsa = cv2.imread('mlsa.png')

cv2.imshow('Cookie Cutter Game', cv2.resize(intro, (0, 0), fx=0.69, fy=0.69))
cv2.waitKey(1)

while True:
    cv2.imshow('Cookie Cutter Game', cv2.resize(intro, (0, 0), fx=0.69, fy=0.69))
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

TIMER_MAX = 45
TIMER = TIMER_MAX
maxMove = 6500000
font = cv2.FONT_HERSHEY_SIMPLEX
cap = cv2.VideoCapture(0)
frameHeight = cap.get(cv2.CAP_PROP_FRAME_HEIGHT)
frameWidth = cap.get(cv2.CAP_PROP_FRAME_WIDTH) 

while True:
    isTrue, frame = cam.read()
    hands, img = detector.findHands(frame, flipType=True)

    if hands:
        # Hand 1
        hand1 = hands[0]
        lmList1 = hand1["lmList"]  # List of 21 Landmark points
        bbox1 = hand1["bbox"]  # Bounding box info x,y,w,h
        centerPoint1 = hand1['center']  # center of the hand cx,cy
        handType1 = hand1["type"]  # Handtype Left or Right

        fingers1 = detector.fingersUp(hand1)

        if len(hands) == 2:
            # Hand 2
            hand2 = hands[1]
            lmList2 = hand2["lmList"]  # List of 21 Landmark points
            bbox2 = hand2["bbox"]  # Bounding box info x,y,w,h
            centerPoint2 = hand2['center']  # center of the hand cx,cy
            handType2 = hand2["type"]  # Hand Type "Left" or "Right"

            fingers2 = detector.fingersUp(hand2)

    cv2.imshow('Video', frame)


    if(cv2.waitKey(20) & 0xFF==ord('q')):
        break




gameOver = False
NotWon =True

#zeroes((dimension x,dimension y, channels))
blank = np.zeros((500,500,3), dtype='uint8')

cv2.rectangle(img, (0,0), (250,250), (0,255,0), thickness=2)
## iamge to draw on, source pts, destination pts, color(RGB), border

##thickness = -1 or cv.FILLED will fill entire box with color

cv2.circle(img, (250,250), 50, (0,0,255), thickness=5)
## iamge to draw on, centre pts, radius, color(RGB), border

cv2.line(img, (0,0), (300,400), (255,0,0), thickness=20)

cv2.putText(img, "Cookie", (100, 100), cv.FONT_HERSHEY_COMPLEX, 2.0, (0,0,0), thickness=2)
## iamge to draw on, source pts, font face, font scale, color, thickness

# Converting to grayscale
gray = cv2.cvtColor(sqr_img, cv2.COLOR_BGR2GRAY)
cv2.imshow('Gray', gray)

# Blur 
blur = cv2.GaussianBlur(sqr_img, (7,7), cv2.BORDER_DEFAULT)
cv2.imshow('Blur', blur)

cam.release()
cv2.destroyAllWindows()